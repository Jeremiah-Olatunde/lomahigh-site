{"version":3,"sources":["webpack://lomahigh/./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack://lomahigh/./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack://lomahigh/./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack://lomahigh/./node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack://lomahigh/./node_modules/core-js/internals/a-possible-prototype.js","webpack://lomahigh/./node_modules/core-js/internals/an-object.js","webpack://lomahigh/./node_modules/core-js/internals/array-includes.js","webpack://lomahigh/./node_modules/core-js/internals/classof-raw.js","webpack://lomahigh/./node_modules/core-js/internals/create-non-enumerable-property.js","webpack://lomahigh/./node_modules/core-js/internals/create-property-descriptor.js","webpack://lomahigh/./node_modules/core-js/internals/descriptors.js","webpack://lomahigh/./node_modules/core-js/internals/document-create-element.js","webpack://lomahigh/./node_modules/core-js/internals/enum-bug-keys.js","webpack://lomahigh/./node_modules/core-js/internals/fails.js","webpack://lomahigh/./node_modules/core-js/internals/get-built-in.js","webpack://lomahigh/./node_modules/core-js/internals/global.js","webpack://lomahigh/./node_modules/core-js/internals/has.js","webpack://lomahigh/./node_modules/core-js/internals/hidden-keys.js","webpack://lomahigh/./node_modules/core-js/internals/html.js","webpack://lomahigh/./node_modules/core-js/internals/ie8-dom-define.js","webpack://lomahigh/./node_modules/core-js/internals/indexed-object.js","webpack://lomahigh/./node_modules/core-js/internals/inherit-if-required.js","webpack://lomahigh/./node_modules/core-js/internals/inspect-source.js","webpack://lomahigh/./node_modules/core-js/internals/internal-state.js","webpack://lomahigh/./node_modules/core-js/internals/is-forced.js","webpack://lomahigh/./node_modules/core-js/internals/is-object.js","webpack://lomahigh/./node_modules/core-js/internals/is-pure.js","webpack://lomahigh/./node_modules/core-js/internals/native-weak-map.js","webpack://lomahigh/./node_modules/core-js/internals/object-create.js","webpack://lomahigh/./node_modules/core-js/internals/object-define-properties.js","webpack://lomahigh/./node_modules/core-js/internals/object-define-property.js","webpack://lomahigh/./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack://lomahigh/./node_modules/core-js/internals/object-get-own-property-names.js","webpack://lomahigh/./node_modules/core-js/internals/object-keys-internal.js","webpack://lomahigh/./node_modules/core-js/internals/object-keys.js","webpack://lomahigh/./node_modules/core-js/internals/object-property-is-enumerable.js","webpack://lomahigh/./node_modules/core-js/internals/object-set-prototype-of.js","webpack://lomahigh/./node_modules/core-js/internals/path.js","webpack://lomahigh/./node_modules/core-js/internals/redefine.js","webpack://lomahigh/./node_modules/core-js/internals/require-object-coercible.js","webpack://lomahigh/./node_modules/core-js/internals/set-global.js","webpack://lomahigh/./node_modules/core-js/internals/shared-key.js","webpack://lomahigh/./node_modules/core-js/internals/shared-store.js","webpack://lomahigh/./node_modules/core-js/internals/shared.js","webpack://lomahigh/./node_modules/core-js/internals/string-trim.js","webpack://lomahigh/./node_modules/core-js/internals/to-absolute-index.js","webpack://lomahigh/./node_modules/core-js/internals/to-indexed-object.js","webpack://lomahigh/./node_modules/core-js/internals/to-integer.js","webpack://lomahigh/./node_modules/core-js/internals/to-length.js","webpack://lomahigh/./node_modules/core-js/internals/to-object.js","webpack://lomahigh/./node_modules/core-js/internals/to-primitive.js","webpack://lomahigh/./node_modules/core-js/internals/uid.js","webpack://lomahigh/./node_modules/core-js/internals/whitespaces.js","webpack://lomahigh/./node_modules/core-js/modules/es.number.constructor.js","webpack://lomahigh/./node_modules/css-loader/dist/runtime/api.js","webpack://lomahigh/./node_modules/css-loader/dist/runtime/cssWithMappingToString.js","webpack://lomahigh/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://lomahigh/./node_modules/vue-style-loader/lib/listToStyles.js","webpack://lomahigh/./node_modules/vue-style-loader/lib/addStylesClient.js"],"names":["targetMap","WeakMap","effectStack","activeEffect","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","effect","fn","options","_isEffect","isEffect","raw","active","scheduler","undefined","includes","cleanup","trackStack","push","shouldTrack","pop","resetTracking","length","id","uid","allowRecurse","deps","createReactiveEffect","lazy","stop","onStop","i","delete","pauseTracking","last","track","target","type","key","depsMap","get","set","Map","dep","Set","has","add","trigger","newValue","oldValue","oldTarget","effects","effectsToAdd","forEach","isNonTrackableKeys","builtInSymbols","Object","getOwnPropertyNames","map","filter","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","isReadonly","shallow","receiver","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","targetIsArray","Reflect","res","isRef","value","readonly","reactive","method","Array","prototype","args","arr","toRaw","this","l","apply","createSetter","shallowSet","hadKey","Number","result","mutableHandlers","deleteProperty","ownKeys","readonlyHandlers","shallowReactiveHandlers","toReactive","toReadonly","toShallow","getProto","v","getPrototypeOf","get$1","isShallow","rawTarget","rawKey","wrap","call","has$1","size","set$1","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","done","next","createReadonlyMethod","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","shallowReadonlyInstrumentations","createInstrumentationGetter","instrumentations","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","createReactiveObject","shallowReactive","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","isExtensible","rawType","targetTypeMap","proxy","Proxy","isReactive","isProxy","r","Boolean","__v_isRef","shallowUnwrapHandlers","unref","ref","proxyRefs","objectWithRefs","ObjectRefImpl","_object","_key","newVal","toRef","object","ComputedRefImpl","getter","_setter","_dirty","self","_value","computed","getterOrOptions","setter","callWithErrorHandling","instance","err","handleError","callWithAsyncErrorHandling","catch","values","throwInDev","vnode","cur","parent","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","config","errorHandler","contextVNode","console","error","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","currentPreFlushParentJob","nextTick","p","then","bind","queueJob","job","pos","start","end","jobId","getId","middle","findInsertionIndex","splice","queueFlush","flushJobs","queueCb","cb","activeQueue","pendingQueue","index","flushPreFlushCbs","seen","parentJob","flushPostFlushCbs","deduped","sort","a","b","Infinity","emit","event","rawArgs","props","isModelListener","startsWith","modelArg","slice","modifiersKey","number","trim","handlerName","handler","onceHandler","emitted","normalizeEmitsOptions","comp","asMixin","deopt","__emits","emits","normalized","hasExtends","extendEmits","normalizedFromExtend","mixins","extends","isEmitListener","replace","toLowerCase","isRenderingCompiledSlot","setCompiledSlotRendering","n","currentRenderingInstance","currentScopeId","setCurrentRenderingInstance","prev","__scopeId","pushScopeId","popScopeId","withScopeId","_id","withCtx","ctx","renderFnWithContext","openBlock","prevInstance","closeBlock","_c","renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","render","renderCache","data","setupState","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","root","inheritAttrs","keys","some","filterModelListeners","cloneVNode","dirs","concat","transition","blockStack","createVNode","Comment","hasPropsChanged","prevProps","nextProps","emitsOptions","nextKeys","normalizeSuspenseSlot","s","children","singleRoot","child","isVNode","filterSingleRoot","setFullProps","rawProps","needCastKeys","camelKey","rawCurrentProps","resolvePropValue","opt","hasDefault","defaultValue","default","Function","propsDefaults","setCurrentInstance","normalizePropsOptions","__props","extendProps","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","String","getType","ctor","match","toString","isSameType","expectedTypes","findIndex","t","injectHook","hook","currentInstance","prepend","hooks","wrappedHook","__weh","isUnmounted","unshift","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","INITIAL_WATCHER_VALUE","watch","source","doWatch","immediate","deep","flush","onTrack","onTrigger","forceTrigger","_shallow","traverse","onInvalidate","baseGetter","runner","queuePostRenderEffect","suspense","isMounted","queuePreFlushCb","recordInstanceBoundEffect","instanceWatch","publicThis","useTransitionState","state","isLeaving","isUnmounting","leavingVNodes","TransitionHookValidator","BaseTransition","name","mode","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","subTree","oldInnerChild","transitionKeyChanged","getTransitionKey","isSameVNodeType","leavingHooks","afterLeave","update","delayLeave","el","earlyRemove","delayedLeave","getLeavingNodesForType","_leaveCb","leavingVNodesCache","create","callHook","leavingVNode","afterHook","cancelHook","called","_enterCb","cancelled","remove","clone","isKeepAlive","component","ssContent","ssFallback","keepComment","ret","keyedFragmentCount","Fragment","patchFlag","__isKeepAlive","registerKeepAliveHook","__wdc","current","isDeactivated","injectToKeepAliveRoot","keepAliveRoot","injected","RegExp","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","invokeDirectiveHook","prevVNode","bindings","oldBindings","binding","dir","createAppContext","app","isNativeTag","NO","performance","globalProperties","optionMergeStrategies","isCustomElement","warnHandler","components","directives","provides","createAppAPI","hydrate","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","version","use","plugin","install","mixin","directive","rootContainer","isHydrate","isSVG","__vue_app__","provide","prodEffectOptions","pendingBranch","setRef","rawRef","oldRawRef","parentSuspense","__asyncLoader","exposed","owner","oldRef","refs","doSet","createRenderer","createHydrationFns","insert","hostInsert","hostRemove","patchProp","hostPatchProp","forcePatchProp","hostForcePatchProp","createElement","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","parentNode","hostParentNode","nextSibling","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","patch","n1","n2","container","anchor","parentComponent","slotScopeIds","optimized","getNextHostNode","unmount","dynamicChildren","Text","processText","processCommentNode","Static","mountStaticNode","processFragment","processElement","processComponent","process","internals","removeStaticNode","mountElement","patchElement","vnodeHook","is","mountChildren","unmountChildren","onVnodeBeforeMount","invokeVNodeHook","scopeId","needCallTransitionHooks","beforeEnter","onVnodeMounted","enter","parentVNode","cloneIfMounted","oldProps","newProps","onVnodeBeforeUpdate","patchProps","class","style","propsToUpdate","dynamicProps","areChildrenSVG","patchBlockChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","fragmentSlotScopeIds","traverseStaticChildren","activate","mountComponent","updateComponent","initialVNode","emptyAppContext","uid$1","accessCache","setupContext","suspenseId","pendingId","asyncDep","asyncResolved","bc","c","bm","m","bu","u","um","bum","da","rtg","rtc","_","createComponentInstance","renderer","isSSR","isStateful","isStatefulComponent","InternalObjectKey","initProps","initSlots","PublicInstanceProxyHandlers","setup","expose","createSetupContext","setupResult","resolvedResult","handleSetupResult","e","finishComponentSetup","setupStatefulComponent","setupComponent","registerDep","setupRenderEffect","placeholder","nextVNode","prevChildren","nextChildren","$stable","shouldUpdateComponent","updateComponentPreRender","indexOf","invalidateJob","originNext","nextTree","prevTree","updateHOCHostEl","hydrateNode","scopedInitialVNode","rawPrevProps","kebabKey","camelizedKey","updateProps","needDeletionCheck","deletionComparisonTarget","updateSlots","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","Math","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","len","arrI","getSequence","nextIndex","move","moveType","leave","performLeave","moveStaticNode","doRemove","deactivate","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","onVnodeUnmounted","removeFragment","performRemove","_vnode","mt","mc","pc","pbc","o","createApp","baseCreateRenderer","ch1","ch2","COMPONENTS","resolveComponent","maybeSelfReference","warnMissing","selfName","displayName","getComponentName","resolveAsset","NULL_DYNAMIC_COMPONENT","registry","currentBlock","disableTracking","createBlock","__v_isVNode","normalizeKey","normalizeRef","isBlockNode","cloned","normalizeChildren","__vccOpts","klass","__isSuspense","isSuspense","__isTeleport","isTeleport","targetAnchor","staticCount","content","fallback","normalizeSuspenseChildren","extraProps","mergeRef","mergedProps","toMerge","existing","incoming","mergeProps","createTextVNode","text","flag","slot","slotFlag","inject","treatDefaultAsFactory","arguments","shouldCacheAccess","applyOptions","deferredData","deferredWatch","deferredProvide","extendsOptions","dataOptions","computedOptions","methods","watchOptions","provideOptions","injectOptions","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","globalMixins","callSyncHook","applyMixins","from","methodHandler","dataFn","resolveData","defineProperty","enumerable","configurable","createWatcher","parentProvides","onDeactivated","onErrorCaptured","callHookWithMixinAndExtends","base","selfHook","path","segments","split","createPathGetter","mergeOptions","to","strats","getPublicInstance","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","__merged","resolveMergedOptions","$forceUpdate","$nextTick","$watch","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","_rc","h","propsOrChildren","svgNS","doc","document","tempContainer","tempSVGContainer","nodeOps","insertBefore","removeChild","tag","createElementNS","multiple","setAttribute","createTextNode","node","nodeValue","textContent","querySelector","selector","temp","innerHTML","first","firstChild","importantRE","setStyle","val","setProperty","prefixed","rawName","cached","prefixCache","prefixes","autoPrefix","test","xlinkNS","_getNow","Date","now","skipTimestampCheck","window","createEvent","timeStamp","ffMatch","navigator","userAgent","cachedNow","reset","optionsModifierRE","nativeOnRE","TRANSITION","ANIMATION","Transition","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","baseProps","DOMTransitionPropsValidators","durations","NumberOf","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","body","offsetHeight","resolveTransitionProps","cls","classList","_vtc","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","setTimeout","timeout","propCount","styles","getComputedStyle","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","max","hasTransform","getTransitionInfo","endEvent","ended","removeEventListener","onEnd","addEventListener","delays","d","toMs","rendererOptions","prevValue","nextValue","transitionClasses","join","className","patchClass","display","cssText","removeAttribute","patchStyle","invokers","_vei","existingInvoker","parseName","initialValue","invoker","attached","originalStop","stopImmediatePropagation","_stopped","patchStopImmediatePropagation","createInvoker","patchEvent","tagName","shouldSetAsProp","patchDOMProp","_trueValue","_falseValue","removeAttributeNS","setAttributeNS","isBoolean","patchAttr","mount","containerOrSelector","normalizeContainer","template","SVGElement","Element","makeMap","str","expectsLowerCase","list","isGloballyWhitelisted","isSpecialBooleanAttr","normalizeStyle","isArray","item","isString","parseStringStyle","isObject","listDelimiterRE","propertyDelimiterRE","tmp","normalizeClass","looseEqual","aValidType","isDate","bValidType","getTime","equal","looseCompareArrays","aHasKey","hasOwnProperty","bHasKey","looseIndexOf","toDisplayString","JSON","stringify","replacer","isMap","entries","reduce","isSet","isPlainObject","EMPTY_OBJ","EMPTY_ARR","NOOP","onRE","isOn","extend","assign","hasOwn","toTypeString","isFunction","isSymbol","isPromise","objectToString","toRawType","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","cache","camelizeRE","camelize","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","toHandlerKey","hasChanged","invokeArrayFns","fns","arg","def","obj","toNumber","parseFloat","isNaN","module","exports","it","TypeError","toIndexedObject","toLength","toAbsoluteIndex","createMethod","IS_INCLUDES","$this","fromIndex","O","DESCRIPTORS","definePropertyModule","createPropertyDescriptor","f","bitmap","writable","fails","global","EXISTS","exec","aFunction","variable","namespace","check","globalThis","g","toObject","getBuiltIn","classof","propertyIsEnumerable","setPrototypeOf","dummy","Wrapper","NewTarget","NewTargetPrototype","constructor","store","functionToString","inspectSource","NATIVE_WEAK_MAP","createNonEnumerableProperty","objectHas","shared","sharedKey","hiddenKeys","OBJECT_ALREADY_INITIALIZED","wmget","wmhas","wmset","metadata","facade","STATE","enforce","getterFor","TYPE","replacement","isForced","feature","detection","normalize","POLYFILL","NATIVE","string","activeXDocument","anObject","defineProperties","enumBugKeys","html","documentCreateElement","IE_PROTO","EmptyConstructor","scriptTag","LT","NullProtoObject","domain","ActiveXObject","iframeDocument","iframe","write","close","parentWindow","NullProtoObjectViaActiveX","appendChild","src","contentWindow","open","F","Properties","objectKeys","IE8_DOM_DEFINE","toPrimitive","$defineProperty","P","Attributes","propertyIsEnumerableModule","$getOwnPropertyDescriptor","getOwnPropertyDescriptor","internalObjectKeys","names","$propertyIsEnumerable","NASHORN_BUG","1","V","descriptor","aPossiblePrototype","CORRECT_SETTER","proto","__proto__","setGlobal","InternalStateModule","getInternalState","enforceInternalState","TEMPLATE","unsafe","simple","noTargetGet","SHARED","IS_PURE","copyright","requireObjectCoercible","whitespace","ltrim","rtrim","toInteger","integer","IndexedObject","ceil","floor","argument","input","PREFERRED_STRING","valueOf","postfix","random","redefine","inheritIfRequired","NUMBER","NativeNumber","NumberPrototype","BROKEN_CLASSOF","third","radix","maxCode","digits","code","charCodeAt","NaN","NumberWrapper","cssWithMappingToString","modules","mediaQuery","dedupe","alreadyImportedModules","_i","_arrayLikeToArray","arr2","_item","_arrayWithHoles","_s","_e","_arr","_n","_d","_iterableToArrayLimit","minLen","_unsupportedIterableToArray","_nonIterableRest","cssMapping","btoa","base64","unescape","encodeURIComponent","sourceMapping","sourceURLs","sources","sourceRoot","url","__esModule","hash","needQuotes","listToStyles","parentId","newStyles","part","media","sourceMap","parts","hasDocument","DEBUG","Error","stylesInDom","head","getElementsByTagName","singletonElement","singletonCounter","isProduction","noop","ssrIdKey","isOldIE","addStylesClient","_isProduction","_options","addStylesToDom","newList","mayRemove","domStyle","addStyle","createStyleElement","styleElement","styleIndex","applyToSingletonTag","applyToTag","newObj","textStore","replaceText","styleSheet","cssNode","childNodes","ssrId"],"mappings":"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","file":"vendors.b9582a62d4de440aa327.js","sourcesContent":["import { EMPTY_OBJ, isArray, isMap, isIntegerKey, isSymbol, extend, hasOwn, isObject, hasChanged, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effect.active) {\r\n            return options.scheduler ? undefined : fn();\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn();\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect.allowRecurse = !!options.allowRecurse;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || effect.allowRecurse) {\r\n                    effects.add(effect);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    add(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    effects.forEach(run);\r\n}\n\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`);\r\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            track(arr, \"get\" /* GET */, i + '');\r\n        }\r\n        // we run the method using the original args first (which may be reactive)\r\n        const res = method.apply(arr, args);\r\n        if (res === -1 || res === false) {\r\n            // if that didn't work, run it again using raw values.\r\n            return method.apply(arr, args.map(toRaw));\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    };\r\n});\r\n['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        pauseTracking();\r\n        const res = method.apply(this, args);\r\n        resetTracking();\r\n        return res;\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver ===\r\n                (isReadonly\r\n                    ? shallow\r\n                        ? shallowReadonlyMap\r\n                        : readonlyMap\r\n                    : shallow\r\n                        ? shallowReactiveMap\r\n                        : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key)\r\n            ? builtInSymbols.has(key)\r\n            : isNonTrackableKeys(key)) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        let oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            oldValue = toRaw(oldValue);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    if (!hadKey) {\r\n        target.add(value);\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return this;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return this;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n};\r\nconst shallowInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, false, true);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, false)\r\n};\r\nconst shallowReadonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, true)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n    shallowReadonlyInstrumentations[method] = createIterableMethod(method, true, true);\r\n});\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? isReadonly\r\n            ? shallowReadonlyInstrumentations\r\n            : shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, false)\r\n};\r\nconst shallowReadonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, true)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst shallowReactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nconst shallowReadonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\r\n}\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);\r\n}\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\r\n}\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers, proxyMap) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nclass RefImpl {\r\n    constructor(_rawValue, _shallow = false) {\r\n        this._rawValue = _rawValue;\r\n        this._shallow = _shallow;\r\n        this.__v_isRef = true;\r\n        this._value = _shallow ? _rawValue : convert(_rawValue);\r\n    }\r\n    get value() {\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        if (hasChanged(toRaw(newVal), this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : convert(newVal);\r\n            trigger(toRaw(this), \"set\" /* SET */, 'value', newVal);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(toRaw(ref), \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => track(this, \"get\" /* GET */, 'value'), () => trigger(this, \"set\" /* SET */, 'value'));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    return isRef(object[key])\r\n        ? object[key]\r\n        : new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = effect(getter, {\r\n            lazy: true,\r\n            scheduler: () => {\r\n                if (!this._dirty) {\r\n                    this._dirty = true;\r\n                    trigger(toRaw(this), \"set\" /* SET */, 'value');\r\n                }\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n        const self = toRaw(this);\r\n        if (self._dirty) {\r\n            self._value = this.effect();\r\n            self._dirty = false;\r\n        }\r\n        track(self, \"get\" /* GET */, 'value');\r\n        return self._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    return new ComputedRefImpl(getter, setter, isFunction(getterOrOptions) || !getterOrOptions.set);\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, shallowReactive, trigger, isReactive, effect, stop, ref, isProxy, proxyRefs, toRef, reactive, shallowReadonly, track, computed as computed$1, isReadonly } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, extend, EMPTY_OBJ, toHandlerKey, toNumber, hyphenate, camelize, isOn, hasOwn, isModelListener, def, isReservedProp, EMPTY_ARR, isObject, capitalize, toRawType, makeMap, remove, NOOP, hasChanged, isSet, isMap, invokeArrayFns, NO, getGlobalThis, normalizeClass, normalizeStyle, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, capitalize, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(job) {\r\n    // the start index should be `flushIndex + 1`\r\n    let start = flushIndex + 1;\r\n    let end = queue.length;\r\n    const jobId = getId(job);\r\n    while (start < end) {\r\n        const middle = (start + end) >>> 1;\r\n        const middleJobId = getId(queue[middle]);\r\n        middleJobId < jobId ? (start = middle + 1) : (end = middle);\r\n    }\r\n    return start;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        const pos = findInsertionIndex(job);\r\n        if (pos > -1) {\r\n            queue.splice(pos, 0, job);\r\n        }\r\n        else {\r\n            queue.push(job);\r\n        }\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > flushIndex) {\r\n        queue.splice(i, 1);\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex]);\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex]);\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkRecursiveUpdates(seen, job);\r\n                }\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length || pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            throw new Error(`Maximum recursive updates exceeded. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, component) {\r\n    if (!component) {\r\n        warn(`HMR API usage is out of date.\\n` +\r\n            `Please upgrade vue-loader/vite/rollup-plugin-vue or other relevant ` +\r\n            `dependency that handles Vue SFC compilation.`);\r\n        component = {};\r\n    }\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        component: isClassComponent(component) ? component.__vccOpts : component,\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    if (newRender)\r\n        record.component.render = newRender;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record.instances).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    const { component, instances } = record;\r\n    if (!hmrDirtyComponents.has(component)) {\r\n        // 1. Update existing comp definition to match new one\r\n        newComp = isClassComponent(newComp) ? newComp.__vccOpts : newComp;\r\n        extend(component, newComp);\r\n        for (const key in component) {\r\n            if (!(key in newComp)) {\r\n                delete component[key];\r\n            }\r\n        }\r\n        // 2. Mark component dirty. This forces the renderer to replace the component\r\n        // on patch.\r\n        hmrDirtyComponents.add(component);\r\n        // 3. Make sure to unmark the component after the reload.\r\n        queuePostFlushCb(() => {\r\n            hmrDirtyComponents.delete(component);\r\n        });\r\n    }\r\n    Array.from(instances).forEach(instance => {\r\n        if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit(instance, event, ...rawArgs) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions)) {\r\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        else if (number) {\r\n            args = rawArgs.map(toNumber);\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    let handlerName;\r\n    let handler = props[(handlerName = toHandlerKey(event))] ||\r\n        // also try camelCase event handler (#2249)\r\n        props[(handlerName = toHandlerKey(camelize(event)))];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handler = props[(handlerName = toHandlerKey(hyphenate(event)))];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            (instance.emitted = {})[handlerName] = true;\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__emits !== undefined) {\r\n        return comp.__emits;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true);\r\n            if (normalizedFromExtend) {\r\n                hasExtends = true;\r\n                extend(normalized, normalizedFromExtend);\r\n            }\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__emits = null);\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    return (comp.__emits = normalized);\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.slice(2).replace(/Once$/, '');\r\n    return (hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n        hasOwn(options, hyphenate(key)) ||\r\n        hasOwn(options, key));\r\n}\n\nlet isRenderingCompiledSlot = 0;\r\nconst setCompiledSlotRendering = (n) => (isRenderingCompiledSlot += n);\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback, noSlotted) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    isRenderingCompiledSlot++;\r\n    openBlock();\r\n    const validSlotContent = slot && ensureValidVNode(slot(props));\r\n    const rendered = createBlock(Fragment, { key: props.key || `_${name}` }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* STABLE */\r\n        ? 64 /* STABLE_FRAGMENT */\r\n        : -2 /* BAIL */);\r\n    if (!noSlotted && rendered.scopeId) {\r\n        rendered.slotScopeIds = [rendered.scopeId + '-s'];\r\n    }\r\n    isRenderingCompiledSlot--;\r\n    return rendered;\r\n}\r\nfunction ensureValidVNode(vnodes) {\r\n    return vnodes.some(child => {\r\n        if (!isVNode(child))\r\n            return true;\r\n        if (child.type === Comment)\r\n            return false;\r\n        if (child.type === Fragment &&\r\n            !ensureValidVNode(child.children))\r\n            return false;\r\n        return true;\r\n    })\r\n        ? vnodes\r\n        : null;\r\n}\n\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nlet currentRenderingInstance = null;\r\nlet currentScopeId = null;\r\n/**\r\n * Note: rendering calls maybe nested. The function returns the parent rendering\r\n * instance if present, which should be restored after the render is done:\r\n *\r\n * ```js\r\n * const prev = setCurrentRenderingInstance(i)\r\n * // ...render\r\n * setCurrentRenderingInstance(prev)\r\n * ```\r\n */\r\nfunction setCurrentRenderingInstance(instance) {\r\n    const prev = currentRenderingInstance;\r\n    currentRenderingInstance = instance;\r\n    currentScopeId = (instance && instance.type.__scopeId) || null;\r\n    return prev;\r\n}\r\n/**\r\n * Set scope id when creating hoisted vnodes.\r\n * @private compiler helper\r\n */\r\nfunction pushScopeId(id) {\r\n    currentScopeId = id;\r\n}\r\n/**\r\n * Technically we no longer need this after 3.0.8 but we need to keep the same\r\n * API for backwards compat w/ code generated by compilers.\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    currentScopeId = null;\r\n}\r\n/**\r\n * Only for backwards compat\r\n * @private\r\n */\r\nconst withScopeId = (_id) => withCtx;\r\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private compiler helper\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance) {\r\n    if (!ctx)\r\n        return fn;\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we need to push a null block to\r\n        // avoid that. This isn't necessary if rendering a compiled `<slot>`.\r\n        if (!isRenderingCompiledSlot) {\r\n            openBlock(true /* null block that disables tracking */);\r\n        }\r\n        const prevInstance = setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(prevInstance);\r\n        if (!isRenderingCompiledSlot) {\r\n            closeBlock();\r\n        }\r\n        return res;\r\n    };\r\n    // mark this as a compiled slot function.\r\n    // this is used in vnode.ts -> normalizeChildren() to set the slot\r\n    // rendering flag.\r\n    renderFnWithContext._c = true;\r\n    return renderFnWithContext;\r\n}\n\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx } = instance;\r\n    let result;\r\n    const prev = setCurrentRenderingInstance(instance);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            result.patchFlag > 0 &&\r\n            result.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (Component.inheritAttrs !== false && fallthroughAttrs) {\r\n            const keys = Object.keys(fallthroughAttrs);\r\n            const { shapeFlag } = root;\r\n            if (keys.length) {\r\n                if (shapeFlag & 1 /* ELEMENT */ ||\r\n                    shapeFlag & 6 /* COMPONENT */) {\r\n                    if (propsOptions && keys.some(isModelListener)) {\r\n                        // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                        // prop, it indicates this component expects to handle v-model and\r\n                        // it should not fallthrough.\r\n                        // related: #1543, #1643, #1989\r\n                        fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                    }\r\n                    root = cloneVNode(root, fallthroughAttrs);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                    const allAttrs = Object.keys(attrs);\r\n                    const eventAttrs = [];\r\n                    const extraAttrs = [];\r\n                    for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                        const key = allAttrs[i];\r\n                        if (isOn(key)) {\r\n                            // ignore v-model handlers when they fail to fallthrough\r\n                            if (!isModelListener(key)) {\r\n                                // remove `on`, lowercase first letter to reflect event casing\r\n                                // accurately\r\n                                eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                            }\r\n                        }\r\n                        else {\r\n                            extraAttrs.push(key);\r\n                        }\r\n                    }\r\n                    if (extraAttrs.length) {\r\n                        warn(`Extraneous non-props attributes (` +\r\n                            `${extraAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes.`);\r\n                    }\r\n                    if (eventAttrs.length) {\r\n                        warn(`Extraneous non-emits event listeners (` +\r\n                            `${eventAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes. ` +\r\n                            `If the listener is intended to be a component custom event listener only, ` +\r\n                            `declare it using the \"emits\" option.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        blockStack.length = 0;\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    setCurrentRenderingInstance(prev);\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nfunction filterSingleRoot(children) {\r\n    let singleRoot;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isVNode(child)) {\r\n            // ignore user comment\r\n            if (child.type !== Comment || child.children === 'v-if') {\r\n                if (singleRoot) {\r\n                    // has more than 1 non-comment child, return now\r\n                    return;\r\n                }\r\n                else {\r\n                    singleRoot = child;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    return singleRoot;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag >= 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    name: 'Suspense',\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = (SuspenseImpl\r\n    );\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG, slotScopeIds);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG, slotScopeIds, optimized);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            const onPending = n2.props && n2.props.onPending;\r\n            if (isFunction(onPending)) {\r\n                onPending();\r\n            }\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            const onResolve = vnode.props && vnode.props.onResolve;\r\n            if (isFunction(onResolve)) {\r\n                onResolve();\r\n            }\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            const onFallback = vnode.props && vnode.props.onFallback;\r\n            if (isFunction(onFallback)) {\r\n                onFallback();\r\n            }\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            suspense.isInFallback = true;\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            const isInPendingSuspense = !!suspense.pendingBranch;\r\n            if (isInPendingSuspense) {\r\n                suspense.deps++;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult, false);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                // only decrease deps count if suspense is not already resolved\r\n                if (isInPendingSuspense && --suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, slotScopeIds, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, slotScopeIds, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    let content;\r\n    let fallback;\r\n    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        content = normalizeSuspenseSlot(children.default);\r\n        fallback = normalizeSuspenseSlot(children.fallback);\r\n    }\r\n    else {\r\n        content = normalizeSuspenseSlot(children);\r\n        fallback = normalizeVNode(null);\r\n    }\r\n    return {\r\n        content,\r\n        fallback\r\n    };\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    if (isFunction(s)) {\r\n        s = s();\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    return normalizeVNode(s);\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    instance.propsDefaults = Object.create(null);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((process.env.NODE_ENV !== 'production') &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                const key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        attrs[key] = value;\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    attrs[key] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        setFullProps(instance, rawProps, props, attrs);\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawProps || EMPTY_OBJ, key, undefined, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    trigger(instance, \"set\" /* SET */, '$attrs');\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    if (rawProps) {\r\n        for (const key in rawProps) {\r\n            const value = rawProps[key];\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                props[camelKey] = value;\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                // Any non-declared (either as a prop or an emitted event) props are put\r\n                // into a separate `attrs` object for spreading. Make sure to preserve\r\n                // original key casing\r\n                attrs[key] = value;\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key], instance);\r\n        }\r\n    }\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction(defaultValue)) {\r\n                const { propsDefaults } = instance;\r\n                if (key in propsDefaults) {\r\n                    value = propsDefaults[key];\r\n                }\r\n                else {\r\n                    setCurrentInstance(instance);\r\n                    value = propsDefaults[key] = defaultValue(props);\r\n                    setCurrentInstance(null);\r\n                }\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (!hasOwn(props, key) && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__props) {\r\n        return comp.__props;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__props = EMPTY_ARR);\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (comp.__props = [normalized, needCastKeys]);\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        return expectedTypes.findIndex(t => isSameType(t, type));\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(rawProps, props, instance) {\r\n    const resolvedValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, resolvedValues[key], opt, !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key)));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol,BigInt');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            (` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR\r\n!isInSSRComponentSetup && injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nconst onErrorCaptured = (hook, target = currentInstance) => {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n};\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ, instance = currentInstance) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    let getter;\r\n    let forceTrigger = false;\r\n    if (isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = !!source._shallow;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */, [\r\n                    instance && instance.proxy\r\n                ]);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */, [\r\n                instance && instance.proxy\r\n            ]);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithAsyncErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    let onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!runner.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = runner();\r\n            if (deep || forceTrigger || hasChanged(newValue, oldValue)) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            runner();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job;\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner, instance);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(runner, instance && instance.suspense);\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, cb, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? () => publicThis[source]\r\n        : source.bind(publicThis);\r\n    return doWatch(getter, cb.bind(publicThis), options, this);\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject(value) || seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isSet(value) || isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out' && innerChild.type !== Comment) {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-op\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        // if the internal renderer is not registered, it indicates that this is server-side rendering,\r\n        // for KeepAlive, we just need to render its children\r\n        if (!sharedContext.renderer) {\r\n            return slots.default;\r\n        }\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const parentSuspense = instance.suspense;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, vnode.slotScopeIds, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getComponentName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post', deep: true });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            const name = getComponentName(comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => withCtx((props) => {\r\n    if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n        warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n            `this will not track dependencies used in the slot. ` +\r\n            `Invoke the slot function inside the render function instead.`);\r\n    }\r\n    return normalizeSlotValue(rawSlot(props));\r\n}, ctx);\r\nconst normalizeObjectSlots = (rawSlots, slots) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') && !isKeepAlive(instance.vnode)) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            instance.slots = children;\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children, optimized) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (optimized && type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n                // #2893\r\n                // when rendering the optimized slots by manually written render function,\r\n                // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\r\n                // i.e. let the `renderSlot` create the bailed Fragment\r\n                if (!optimized && type === 1 /* STABLE */) {\r\n                    delete slots._;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        const hook = binding.dir[name];\r\n        if (hook) {\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            isCustomElement: NO,\r\n            errorHandler: undefined,\r\n            warnHandler: undefined\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null)\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                        // global mixin with props/emits de-optimizes props/emits\r\n                        // normalization caching.\r\n                        if (mixin.props || mixin.emits) {\r\n                            context.deopt = true;\r\n                        }\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate, isSVG) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer, isSVG);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer, isSVG);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                    delete app._container.__vue_app__;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if ((process.env.NODE_ENV !== 'production') && !container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type.toLowerCase() !==\r\n                            node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    vnode.slotScopeIds = slotScopeIds;\r\n                    const container = parentNode(node);\r\n                    const hydrateComponent = () => {\r\n                        mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    };\r\n                    // async component\r\n                    const loadAsync = vnode.type.__asyncLoader;\r\n                    if (loadAsync) {\r\n                        loadAsync().then(hydrateComponent);\r\n                    }\r\n                    else {\r\n                        hydrateComponent();\r\n                    }\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), slotScopeIds, optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // skip props & children if this is hoisted static nodes\r\n        if (patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (!optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if (!isReservedProp(key) && isOn(key)) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            else if (vnode.type === Text && !vnode.children) {\r\n                continue;\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        const { slotScopeIds: fragmentSlotScopeIds } = vnode;\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    let needWarn = false;\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn) {\r\n        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +\r\n            `configure your bundler to explicitly replace feature flag globals ` +\r\n            `with boolean literals to get proper tree-shaking in the final bundle. ` +\r\n            `See http://link.vuejs.org/feature-flags for more details.`);\r\n    }\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\r\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent, errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        __asyncLoader: load,\r\n        name: 'AsyncComponentWrapper',\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if ((suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { ref, props, children } }) {\r\n    const vnode = createVNode(comp, props, children);\r\n    // ensure inner component inherits the async wrapper's ref owner\r\n    vnode.ref = ref;\r\n    return vnode;\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob,\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    allowRecurse: true\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        allowRecurse: true,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect = queueEffectWithSuspense\r\n    ;\r\nconst setRef = (rawRef, oldRawRef, parentSuspense, vnode) => {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode));\r\n        return;\r\n    }\r\n    let value;\r\n    if (!vnode) {\r\n        // means unmount\r\n        value = null;\r\n    }\r\n    else if (isAsyncWrapper(vnode)) {\r\n        // when mounting async components, nothing needs to be done,\r\n        // because the template ref is forwarded to inner component\r\n        return;\r\n    }\r\n    else if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n        value = vnode.component.exposed || vnode.component.proxy;\r\n    }\r\n    else {\r\n        value = vnode.el;\r\n    }\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        const doSet = () => {\r\n            refs[ref] = value;\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isFunction(ref)) {\r\n        callWithErrorHandling(ref, owner, 12 /* FUNCTION_REF */, [value, refs]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n};\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        const target = getGlobalThis();\r\n        target.__VUE__ = true;\r\n        setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__);\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, slotScopeIds = null, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentSuspense, n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostInsert(el, container, nextSibling);\r\n            el = next;\r\n        }\r\n        hostInsert(anchor, container, nextSibling);\r\n    };\r\n    const removeStaticNode = ({ el, anchor }) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostRemove(el);\r\n            el = next;\r\n        }\r\n        hostRemove(anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is, props);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', slotScopeIds, optimized || !!vnode.dynamicChildren);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (slotScopeIds) {\r\n            for (let i = 0; i < slotScopeIds.length; i++) {\r\n                hostSetScopeId(el, slotScopeIds[i]);\r\n            }\r\n        }\r\n        if (parentComponent) {\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                subTree.patchFlag > 0 &&\r\n                subTree.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                const parentVNode = parentComponent.vnode;\r\n                setScopeId(el, parentVNode, parentVNode.scopeId, parentVNode.slotScopeIds, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, slotScopeIds, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized, slotScopeIds);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (next !== prev ||\r\n                            (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds);\r\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds, false);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG, slotScopeIds) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // - In the case of a Fragment, we need to provide the actual parent\r\n            // of the Fragment itself so it can move its children.\r\n            oldVNode.type === Fragment ||\r\n                // - In the case of different nodes, there is going to be a replacement\r\n                // which also requires the correct parent container\r\n                !isSameVNodeType(oldVNode, newVNode) ||\r\n                // - In the case of a component, it could contain anything.\r\n                oldVNode.shapeFlag & 6 /* COMPONENT */ ||\r\n                oldVNode.shapeFlag & 64 /* TELEPORT */\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev ||\r\n                    (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\r\n        if (patchFlag > 0) {\r\n            optimized = true;\r\n        }\r\n        // check if this is a slot fragment with :slotted scope ids\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren &&\r\n                // #2715 the previous fragment could've been a BAILed one as a result\r\n                // of renderSlot() with no valid children\r\n                n1.dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        n2.slotScopeIds = slotScopeIds;\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            startMeasure(instance, `init`);\r\n        }\r\n        setupComponent(instance);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            endMeasure(instance, `init`);\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if (instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `hydrate`);\r\n                    }\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense, null);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `hydrate`);\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    const scopedInitialVNode = initialVNode;\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, scopedInitialVNode);\r\n                    }, parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                const { a } = instance;\r\n                if (a &&\r\n                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    queuePostRenderEffect(a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentAdded(instance);\r\n                }\r\n                // #2458: deference mount-only object parameters to prevent memleaks\r\n                initialVNode = container = anchor = null;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                    }, parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children, optimized);\r\n        pauseTracking();\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n        resetTracking();\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, null);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if (shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (shapeFlag & 64 /* TELEPORT */) {\r\n                vnode.type.remove(vnode, parentComponent, parentSuspense, optimized, internals, doRemove);\r\n            }\r\n            else if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                (patchFlag & 128 /* KEYED_FRAGMENT */ ||\r\n                    patchFlag & 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container, isSVG) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container, null, null, null, isSVG);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always moved so that need inherit el form previous nodes\r\n * to ensure correct moved position.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        const { shapeFlag, children } = n2;\r\n        // #3302\r\n        // HMR updated, force full diff\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n                isSVG = isSVG || isTargetSVG(target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            isSVG = isSVG || isTargetSVG(target);\r\n            if (n2.dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, false);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, parentComponent, parentSuspense, optimized, { um: unmount, o: { remove: hostRemove } }, doRemove) {\r\n        const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode;\r\n        if (target) {\r\n            hostRemove(targetAnchor);\r\n        }\r\n        // an unmounted teleport should always remove its children if not disabled\r\n        if (doRemove || !isTeleportDisabled(props)) {\r\n            hostRemove(anchor);\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                for (let i = 0; i < children.length; i++) {\r\n                    unmount(children[i], parentComponent, parentSuspense, true, optimized);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name, maybeSelfReference) {\r\n    return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // explicit self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            const selfName = getComponentName(Component);\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first for components with mixin or extends.\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if (!res && maybeSelfReference) {\r\n            // fallback to implicit self-reference\r\n            return Component;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    shouldTrack += value;\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren = currentBlock || EMPTY_ARR;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (shouldTrack > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isString(ref) || isRef(ref) || isFunction(ref)\r\n            ? { i: currentRenderingInstance, r: ref }\r\n            : ref\r\n        : null);\r\n};\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        : isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        slotScopeIds: null,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    normalizeChildren(vnode, children);\r\n    // normalize suspense children\r\n    if (shapeFlag & 128 /* SUSPENSE */) {\r\n        const { content, fallback } = normalizeSuspenseChildren(vnode);\r\n        vnode.ssContent = content;\r\n        vnode.ssFallback = fallback;\r\n    }\r\n    if (shouldTrack > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag, children } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    return {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        slotScopeIds: vnode.slotScopeIds,\r\n        children: (process.env.NODE_ENV !== 'production') && patchFlag === -1 /* HOISTED */ && isArray(children)\r\n            ? children.map(deepCloneVNode)\r\n            : children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n}\r\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\r\nfunction deepCloneVNode(vnode) {\r\n    const cloned = cloneVNode(vnode);\r\n    if (isArray(vnode.children)) {\r\n        cloned.children = vnode.children.map(deepCloneVNode);\r\n    }\r\n    return cloned;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, child);\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return child.el === null ? child : cloneVNode(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && setCompiledSlotRendering(1);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && setCompiledSlotRendering(-1);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n                else {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = extend({}, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, toMerge[key])\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the intance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction(defaultValue)\r\n                ? defaultValue()\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet shouldCacheAccess = true;\r\nfunction applyOptions(instance, options, deferredData = [], deferredWatch = [], deferredProvide = [], asMixin = false) {\r\n    const { \r\n    // composition\r\n    mixins, extends: extendsOptions, \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // assets\r\n    components, directives, \r\n    // lifecycle\r\n    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, \r\n    // public API\r\n    expose } = options;\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (asMixin && render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    // applyOptions is called non-as-mixin once per instance\r\n    if (!asMixin) {\r\n        shouldCacheAccess = false;\r\n        callSyncHook('beforeCreate', \"bc\" /* BEFORE_CREATE */, options, instance, globalMixins);\r\n        shouldCacheAccess = true;\r\n        // global mixins are applied first\r\n        applyMixins(instance, globalMixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    // extending a base component...\r\n    if (extendsOptions) {\r\n        applyOptions(instance, extendsOptions, deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n    // local mixins\r\n    if (mixins) {\r\n        applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        if (isArray(injectOptions)) {\r\n            for (let i = 0; i < injectOptions.length; i++) {\r\n                const key = injectOptions[i];\r\n                ctx[key] = inject(key);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const key in injectOptions) {\r\n                const opt = injectOptions[key];\r\n                if (isObject(opt)) {\r\n                    ctx[key] = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n                }\r\n                else {\r\n                    ctx[key] = inject(opt);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                // In dev mode, we use the `createRenderContext` function to define methods to the proxy target,\r\n                // and those are read-only but reconfigurable, so it needs to be redefined here\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    Object.defineProperty(ctx, key, {\r\n                        value: methodHandler.bind(publicThis),\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        writable: true\r\n                    });\r\n                }\r\n                else {\r\n                    ctx[key] = methodHandler.bind(publicThis);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (!asMixin) {\r\n        if (deferredData.length) {\r\n            deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis));\r\n        }\r\n        if (dataOptions) {\r\n            // @ts-ignore dataOptions is not fully type safe\r\n            resolveData(instance, dataOptions, publicThis);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const rawData = toRaw(instance.data);\r\n            for (const key in rawData) {\r\n                checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                // expose data on ctx during dev\r\n                if (key[0] !== '$' && key[0] !== '_') {\r\n                    Object.defineProperty(ctx, key, {\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        get: () => rawData[key],\r\n                        set: NOOP\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (dataOptions) {\r\n        deferredData.push(dataOptions);\r\n    }\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        deferredWatch.push(watchOptions);\r\n    }\r\n    if (!asMixin && deferredWatch.length) {\r\n        deferredWatch.forEach(watchOptions => {\r\n            for (const key in watchOptions) {\r\n                createWatcher(watchOptions[key], ctx, publicThis, key);\r\n            }\r\n        });\r\n    }\r\n    if (provideOptions) {\r\n        deferredProvide.push(provideOptions);\r\n    }\r\n    if (!asMixin && deferredProvide.length) {\r\n        deferredProvide.forEach(provideOptions => {\r\n            const provides = isFunction(provideOptions)\r\n                ? provideOptions.call(publicThis)\r\n                : provideOptions;\r\n            Reflect.ownKeys(provides).forEach(key => {\r\n                provide(key, provides[key]);\r\n            });\r\n        });\r\n    }\r\n    // asset options.\r\n    // To reduce memory usage, only components with mixins or extends will have\r\n    // resolved asset registry attached to instance.\r\n    if (asMixin) {\r\n        if (components) {\r\n            extend(instance.components ||\r\n                (instance.components = extend({}, instance.type.components)), components);\r\n        }\r\n        if (directives) {\r\n            extend(instance.directives ||\r\n                (instance.directives = extend({}, instance.type.directives)), directives);\r\n        }\r\n    }\r\n    // lifecycle options\r\n    if (!asMixin) {\r\n        callSyncHook('created', \"c\" /* CREATED */, options, instance, globalMixins);\r\n    }\r\n    if (beforeMount) {\r\n        onBeforeMount(beforeMount.bind(publicThis));\r\n    }\r\n    if (mounted) {\r\n        onMounted(mounted.bind(publicThis));\r\n    }\r\n    if (beforeUpdate) {\r\n        onBeforeUpdate(beforeUpdate.bind(publicThis));\r\n    }\r\n    if (updated) {\r\n        onUpdated(updated.bind(publicThis));\r\n    }\r\n    if (activated) {\r\n        onActivated(activated.bind(publicThis));\r\n    }\r\n    if (deactivated) {\r\n        onDeactivated(deactivated.bind(publicThis));\r\n    }\r\n    if (errorCaptured) {\r\n        onErrorCaptured(errorCaptured.bind(publicThis));\r\n    }\r\n    if (renderTracked) {\r\n        onRenderTracked(renderTracked.bind(publicThis));\r\n    }\r\n    if (renderTriggered) {\r\n        onRenderTriggered(renderTriggered.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && beforeDestroy) {\r\n        warn(`\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`);\r\n    }\r\n    if (beforeUnmount) {\r\n        onBeforeUnmount(beforeUnmount.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && destroyed) {\r\n        warn(`\\`destroyed\\` has been renamed to \\`unmounted\\`.`);\r\n    }\r\n    if (unmounted) {\r\n        onUnmounted(unmounted.bind(publicThis));\r\n    }\r\n    if (isArray(expose)) {\r\n        if (!asMixin) {\r\n            if (expose.length) {\r\n                const exposed = instance.exposed || (instance.exposed = proxyRefs({}));\r\n                expose.forEach(key => {\r\n                    exposed[key] = toRef(publicThis, key);\r\n                });\r\n            }\r\n            else if (!instance.exposed) {\r\n                instance.exposed = EMPTY_OBJ;\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`The \\`expose\\` option is ignored when used in mixins.`);\r\n        }\r\n    }\r\n}\r\nfunction callSyncHook(name, type, options, instance, globalMixins) {\r\n    for (let i = 0; i < globalMixins.length; i++) {\r\n        callHookWithMixinAndExtends(name, type, globalMixins[i], instance);\r\n    }\r\n    callHookWithMixinAndExtends(name, type, options, instance);\r\n}\r\nfunction callHookWithMixinAndExtends(name, type, options, instance) {\r\n    const { extends: base, mixins } = options;\r\n    const selfHook = options[name];\r\n    if (base) {\r\n        callHookWithMixinAndExtends(name, type, base, instance);\r\n    }\r\n    if (mixins) {\r\n        for (let i = 0; i < mixins.length; i++) {\r\n            callHookWithMixinAndExtends(name, type, mixins[i], instance);\r\n        }\r\n    }\r\n    if (selfHook) {\r\n        callWithAsyncErrorHandling(selfHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        applyOptions(instance, mixins[i], deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n}\r\nfunction resolveData(instance, dataFn, publicThis) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(dataFn)) {\r\n        warn(`The data option must be a function. ` +\r\n            `Plain object usage is no longer supported.`);\r\n    }\r\n    shouldCacheAccess = false;\r\n    const data = dataFn.call(publicThis, publicThis);\r\n    shouldCacheAccess = true;\r\n    if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n        warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n            `intend to perform data fetching before component renders, use ` +\r\n            `async setup() + <Suspense>.`);\r\n    }\r\n    if (!isObject(data)) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n    }\r\n    else if (instance.data === EMPTY_OBJ) {\r\n        instance.data = reactive(data);\r\n    }\r\n    else {\r\n        // existing data: this is a mixin or extends.\r\n        extend(instance.data, data);\r\n    }\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction resolveMergedOptions(instance) {\r\n    const raw = instance.type;\r\n    const { __merged, mixins, extends: extendsOptions } = raw;\r\n    if (__merged)\r\n        return __merged;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (!globalMixins.length && !mixins && !extendsOptions)\r\n        return raw;\r\n    const options = {};\r\n    globalMixins.forEach(m => mergeOptions(options, m, instance));\r\n    mergeOptions(options, raw, instance);\r\n    return (raw.__merged = options);\r\n}\r\nfunction mergeOptions(to, from, instance) {\r\n    const strats = instance.appContext.config.optionMergeStrategies;\r\n    const { mixins, extends: extendsOptions } = from;\r\n    extendsOptions && mergeOptions(to, extendsOptions, instance);\r\n    mixins &&\r\n        mixins.forEach((m) => mergeOptions(to, m, instance));\r\n    for (const key in from) {\r\n        if (strats && hasOwn(strats, key)) {\r\n            to[key] = strats[key](to[key], from[key], instance.proxy, key);\r\n        }\r\n        else {\r\n            to[key] = from[key];\r\n        }\r\n    }\r\n}\n\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (i) => {\r\n    if (!i)\r\n        return null;\r\n    if (isStatefulComponent(i))\r\n        return i.exposed ? i.exposed : i.proxy;\r\n    return getPublicInstance(i.parent);\r\n};\r\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // let @vue/reactivity know it should never observe Vue public instances.\r\n        if (key === \"__v_skip\" /* SKIP */) {\r\n            return true;\r\n        }\r\n        // for internal formatters to know that this is a Vue instance\r\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || shouldCacheAccess) {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            return globalProperties[key];\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else if (instance === currentRenderingInstance) {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (hasOwn(instance.props, key)) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    // expose global properties\r\n    const { globalProperties } = instance.appContext.config;\r\n    Object.keys(globalProperties).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => globalProperties[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (key[0] === '$' || key[0] === '_') {\r\n            warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                `which are reserved prefixes for Vue internals.`);\r\n            return;\r\n        }\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        exposed: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // props default value\r\n        propsDefaults: EMPTY_OBJ,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nfunction isStatefulComponent(instance) {\r\n    return instance.vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children } = instance.vnode;\r\n    const isStateful = isStatefulComponent(instance);\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise(setupResult)) {\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult\r\n                    .then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult, isSSR);\r\n                })\r\n                    .catch(e => {\r\n                    handleError(e, instance, 0 /* SETUP_FUNCTION */);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult, isSSR);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance, isSSR);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        {\r\n            instance.render = setupResult;\r\n        }\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance, isSSR);\r\n}\r\nlet compile;\r\n// dev only\r\nconst isRuntimeOnly = () => !compile;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        // could be set from setup()\r\n        if (compile && Component.template && !Component.render) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `compile`);\r\n            }\r\n            Component.render = compile(Component.template, {\r\n                isCustomElement: instance.appContext.config.isCustomElement,\r\n                delimiters: Component.delimiters\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `compile`);\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__) {\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        applyOptions(instance, Component);\r\n        resetTracking();\r\n        currentInstance = null;\r\n    }\r\n    // warn missing template/render\r\n    // the runtime compilation of template in SSR is done by server-render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP && !isSSR) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                (` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nconst attrHandlers = {\r\n    get: (target, key) => {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            markAttrsAccessed();\r\n        }\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    const expose = exposed => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.exposed) {\r\n            warn(`expose() should be called only once per setup().`);\r\n        }\r\n        instance.exposed = proxyRefs(exposed);\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get attrs() {\r\n                return new Proxy(instance.attrs, attrHandlers);\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            },\r\n            expose\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit,\r\n            expose\r\n        };\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect, instance = currentInstance) {\r\n    if (instance) {\r\n        (instance.effects || (instance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\nfunction getComponentName(Component) {\r\n    return isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = getComponentName(Component);\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction(value) && '__vccOpts' in value;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n// implementation\r\nfunction defineProps() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineProps() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\n// implementation\r\nfunction defineEmit() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineEmit() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\nfunction useContext() {\r\n    const i = getCurrentInstance();\r\n    if ((process.env.NODE_ENV !== 'production') && !i) {\r\n        warn(`useContext() called without active instance.`);\r\n    }\r\n    return i.setupContext || (i.setupContext = createSetupContext(i));\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSSRContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    /* eslint-disable no-restricted-globals */\r\n    if (!(process.env.NODE_ENV !== 'production') || typeof window === 'undefined') {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!isObject(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (isObject(v)) {\r\n            return ['object', { object: asRaw ? toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (isFunction(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((isArray(opts) && opts.includes(key)) ||\r\n            (isObject(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (v._shallow) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.0.11\";\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = (null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmit, defineProps, devtools, getCurrentInstance, getTransitionRawChildren, h, handleError, initCustomFormatter, inject, isRuntimeOnly, isVNode, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useContext, useSSRContext, useTransitionState, version, warn, watch, watchEffect, withCtx, withDirectives, withScopeId };\n","import { camelize, warn, callWithAsyncErrorHandling, getCurrentInstance, onMounted, watchEffect, onUpdated, Fragment, h, BaseTransition, useTransitionState, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createVNode, createRenderer, isRuntimeOnly, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, isOn, isModelListener, isFunction, EMPTY_OBJ, extend, isObject, toNumber, invokeArrayFns, looseIndexOf, isSet, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nlet tempContainer;\r\nlet tempSVGContainer;\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is, props) => {\r\n        const el = isSVG\r\n            ? doc.createElementNS(svgNS, tag)\r\n            : doc.createElement(tag, is ? { is } : undefined);\r\n        if (tag === 'select' && props && props.multiple != null) {\r\n            el.setAttribute('multiple', props.multiple);\r\n        }\r\n        return el;\r\n    },\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        const cloned = el.cloneNode(true);\r\n        // #3072\r\n        // - in `patchDOMProp`, we store the actual value in the `el._value` property.\r\n        // - normally, elements using `:value` bindings will not be hoisted, but if\r\n        //   the bound value is a constant, e.g. `:value=\"true\"` - they do get\r\n        //   hoisted.\r\n        // - in production, hoisted nodes are cloned when subsequent inserts, but\r\n        //   cloneNode() does not copy the custom property we attached.\r\n        // - This may need to account for other custom DOM properties we attach to\r\n        //   elements in addition to `_value` in the future.\r\n        if (`_value` in el) {\r\n            cloned._value = el._value;\r\n        }\r\n        return cloned;\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        const temp = isSVG\r\n            ? tempSVGContainer ||\r\n                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))\r\n            : tempContainer || (tempContainer = doc.createElement('div'));\r\n        temp.innerHTML = content;\r\n        const first = temp.firstChild;\r\n        let node = first;\r\n        let last = node;\r\n        while (node) {\r\n            last = node;\r\n            nodeOps.insert(node, parent, anchor);\r\n            node = temp.firstChild;\r\n        }\r\n        return [first, last];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    if (value == null) {\r\n        value = '';\r\n    }\r\n    if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        // directly setting className should be faster than setAttribute in theory\r\n        // if this is an element during a transition, take the temporary transition\r\n        // classes into account.\r\n        const transitionClasses = el._vtc;\r\n        if (transitionClasses) {\r\n            value = (value\r\n                ? [value, ...transitionClasses]\r\n                : [...transitionClasses]).join(' ');\r\n        }\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        if (prev !== next) {\r\n            const current = style.display;\r\n            style.cssText = next;\r\n            // indicates that the `display` of the element is controlled by `v-show`,\r\n            // so we always keep the current `display` value regardless of the `style` value,\r\n            // thus handing over control to `v-show`.\r\n            if ('_vod' in el) {\r\n                style.display = current;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' || value == null) {\r\n        const type = typeof el[key];\r\n        if (value === '' && type === 'boolean') {\r\n            // e.g. <select multiple> compiles to { multiple: '' }\r\n            el[key] = true;\r\n            return;\r\n        }\r\n        else if (value == null && type === 'string') {\r\n            // e.g. <div :id=\"null\">\r\n            el[key] = '';\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n        else if (type === 'number') {\r\n            // e.g. <img :width=\"null\">\r\n            el[key] = 0;\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n    }\r\n    // some properties perform value validation and throw\r\n    try {\r\n        el[key] = value;\r\n    }\r\n    catch (e) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                `value ${value} is invalid.`, e);\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\nlet skipTimestampCheck = false;\r\nif (typeof window !== 'undefined') {\r\n    // Determine what event timestamp the browser is using. Annoyingly, the\r\n    // timestamp can either be hi-res (relative to page load) or low-res\r\n    // (relative to UNIX epoch), so in order to compare time we have to use the\r\n    // same timestamp type when saving the flush timestamp.\r\n    if (_getNow() > document.createEvent('Event').timeStamp) {\r\n        // if the low-res timestamp which is bigger than the event timestamp\r\n        // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n        // and we need to use the hi-res version for event listeners as well.\r\n        _getNow = () => performance.now();\r\n    }\r\n    // #3485: Firefox <= 53 has incorrect Event.timeStamp implementation\r\n    // and does not fire microtasks in between event propagation, so safe to exclude.\r\n    const ffMatch = navigator.userAgent.match(/firefox\\/(\\d+)/i);\r\n    skipTimestampCheck = !!(ffMatch && Number(ffMatch[1]) <= 53);\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [hyphenate(name.slice(2)), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (skipTimestampCheck || timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst forcePatchProp = (_, key) => key === 'value';\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                // ignore v-model listeners\r\n                if (!isModelListener(key)) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML\r\n        if (key === 'innerHTML') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787, #2840 form property on form elements is readonly and must be set as\r\n    // attribute.\r\n    if (key === 'form') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // #2766 <textarea type> must be set as attribute\r\n    if (key === 'type' && el.tagName === 'TEXTAREA') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nfunction useCssVars(getter) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy));\r\n    onMounted(() => watchEffect(setVars, { flush: 'post' }));\r\n    onUpdated(setVars);\r\n}\r\nfunction setVarsOnVNode(vnode, vars) {\r\n    if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        const style = vnode.el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${key}`, vars[key]);\r\n        }\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars));\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\nfunction resolveTransitionProps(rawProps) {\r\n    let { name = 'v', type, css = true, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (!css) {\r\n        return baseProps;\r\n    }\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            hook && hook(el, resolve);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!(hook && hook.length > 1)) {\r\n                    whenTransitionEnds(el, type, enterDuration, resolve);\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            onBeforeEnter && onBeforeEnter(el);\r\n            addTransitionClass(el, enterFromClass);\r\n            addTransitionClass(el, enterActiveClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            onBeforeAppear && onBeforeAppear(el);\r\n            addTransitionClass(el, appearFromClass);\r\n            addTransitionClass(el, appearActiveClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveFromClass);\r\n            // force reflow so *-leave-from classes immediately take effect (#2593)\r\n            forceReflow();\r\n            addTransitionClass(el, leaveActiveClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!(onLeave && onLeave.length > 1)) {\r\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\r\n                }\r\n            });\r\n            onLeave && onLeave(el, resolve);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            onEnterCancelled && onEnterCancelled(el);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            onAppearCancelled && onAppearCancelled(el);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            onLeaveCancelled && onLeaveCancelled(el);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nlet endId = 0;\r\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\r\n    const id = (el._endId = ++endId);\r\n    const resolveIfNotStale = () => {\r\n        if (id === el._endId) {\r\n            resolve();\r\n        }\r\n    };\r\n    if (explicitTimeout) {\r\n        return setTimeout(resolveIfNotStale, explicitTimeout);\r\n    }\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return resolve();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        resolveIfNotStale();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el && ++ended >= propCount) {\r\n            end();\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\r\n// synchronously force layout to put elements into a certain state\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            const tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    created(el, _, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (isSet(modelValue)) {\r\n                const cloned = new Set(modelValue);\r\n                if (checked) {\r\n                    cloned.add(elementValue);\r\n                }\r\n                else {\r\n                    cloned.delete(elementValue);\r\n                }\r\n                assign(cloned);\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    // set initial checked on mount to wait for true-value/false-value\r\n    mounted: setChecked,\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    created(el, { value, modifiers: { number } }, vnode) {\r\n        const isSetModel = isSet(value);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple\r\n                ? isSetModel\r\n                    ? new Set(selectedVal)\r\n                    : selectedVal\r\n                : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value) && !isSet(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (isArray(value)) {\r\n                option.selected = looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event))\r\n            return;\r\n        const eventKey = hyphenate(event.key);\r\n        if (\r\n        // None of the provided key modifiers match the current event key\r\n        !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst rendererOptions = extend({ patchProp, forcePatchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCustomElementCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container, false, container instanceof SVGElement);\r\n        if (container instanceof Element) {\r\n            container.removeAttribute('v-cloak');\r\n            container.setAttribute('data-v-app', '');\r\n        }\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCustomElementCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true, container instanceof SVGElement);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\n// dev only\r\nfunction injectCustomElementCheck(app) {\r\n    if (isRuntimeOnly()) {\r\n        const value = app.config.isCustomElement;\r\n        Object.defineProperty(app.config, 'isCustomElement', {\r\n            get() {\r\n                return value;\r\n            },\r\n            set() {\r\n                warn(`The \\`isCustomElement\\` config option is only respected when using the runtime compiler.` +\r\n                    `If you are using the runtime-only build, \\`isCustomElement\\` must be passed to \\`@vue/compiler-dom\\` in the build setup instead` +\r\n                    `- for example, via the \\`compilerOptions\\` option in vue-loader: https://vue-loader.vuejs.org/options.html#compileroptions.`);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector \"${container}\" returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        container instanceof window.ShadowRoot &&\r\n        container.mode === 'closed') {\r\n        warn(`mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`);\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeClass(value[i]);\r\n            if (normalized) {\r\n                res += normalized + ' ';\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it) && it !== null) {\n    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n  } return it;\n};\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var path = require('../internals/path');\nvar global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n","var toObject = require('../internals/to-object');\n\nvar hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = function hasOwn(it, key) {\n  return hasOwnProperty.call(toObject(it), key);\n};\n","module.exports = {};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- requied for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","var isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    typeof (NewTarget = dummy.constructor) == 'function' &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","var store = require('../internals/shared-store');\n\nvar functionToString = Function.toString;\n\n// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper\nif (typeof store.inspectSource != 'function') {\n  store.inspectSource = function (it) {\n    return functionToString.call(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar objectHas = require('../internals/has');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    if (wmhas.call(store, it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (objectHas(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","module.exports = false;\n","var global = require('../internals/global');\nvar inspectSource = require('../internals/inspect-source');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    /* global ActiveXObject -- old IE */\n    activeXDocument = document.domain && new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","/* eslint-disable no-proto -- safe */\nvar anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n// eslint-disable-next-line es/no-object-setprototypeof -- safe\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n    setter.call(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter.call(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","var global = require('../internals/global');\n\nmodule.exports = global;\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split('String');\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  var state;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) {\n      createNonEnumerableProperty(value, 'name', key);\n    }\n    state = enforceInternalState(value);\n    if (!state.source) {\n      state.source = TEMPLATE.join(typeof key == 'string' ? key : '');\n    }\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else createNonEnumerableProperty(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n});\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (key, value) {\n  try {\n    createNonEnumerableProperty(global, key, value);\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\nmodule.exports = store;\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.12.1',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2021 Denis Pushkarev (zloirock.ru)'\n});\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.es/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","var isObject = require('../internals/is-object');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (input, PREFERRED_STRING) {\n  if (!isObject(input)) return input;\n  var fn, val;\n  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n};\n","// a string of all valid unicode whitespaces\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002' +\n  '\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar has = require('../internals/has');\nvar classof = require('../internals/classof-raw');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar create = require('../internals/object-create');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\n\n// Opera ~12 has broken Object#toString\nvar BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;\n\n// `ToNumber` abstract operation\n// https://tc39.es/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = it.charCodeAt(0);\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = it.slice(2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = digits.charCodeAt(index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.es/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var dummy = this;\n    return dummy instanceof NumberWrapper\n      // check on 1..constructor(foo) case\n      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)\n        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,' +\n    // ESNext\n    'fromString,range'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \"\"]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nmodule.exports = function cssWithMappingToString(item) {\n  var _item = _slicedToArray(item, 4),\n      content = _item[1],\n      cssMapping = _item[3];\n\n  if (typeof btoa === \"function\") {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = url && url.__esModule ? url.default : url;\n\n  if (typeof url !== \"string\") {\n    return url;\n  } // If url is already wrapped in quotes, remove them\n\n\n  if (/^['\"].*['\"]$/.test(url)) {\n    // eslint-disable-next-line no-param-reassign\n    url = url.slice(1, -1);\n  }\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  } // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n\n\n  if (/[\"'() \\t\\n]/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n\n  return url;\n};","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nimport listToStyles from './listToStyles'\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nexport default function addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n"],"sourceRoot":""}